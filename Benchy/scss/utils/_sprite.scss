// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$add-user-name: 'add-user';
$add-user-x: 110px;
$add-user-y: 55px;
$add-user-offset-x: -110px;
$add-user-offset-y: -55px;
$add-user-width: 29px;
$add-user-height: 20px;
$add-user-total-width: 160px;
$add-user-total-height: 105px;
$add-user-image: '../img/sprite.png';
$add-user: (110px, 55px, -110px, -55px, 29px, 20px, 160px, 105px, '../img/sprite.png', 'add-user', );
$messenger-name: 'messenger';
$messenger-x: 0px;
$messenger-y: 0px;
$messenger-offset-x: 0px;
$messenger-offset-y: 0px;
$messenger-width: 50px;
$messenger-height: 50px;
$messenger-total-width: 160px;
$messenger-total-height: 105px;
$messenger-image: '../img/sprite.png';
$messenger: (0px, 0px, 0px, 0px, 50px, 50px, 160px, 105px, '../img/sprite.png', 'messenger', );
$skype-name: 'skype';
$skype-x: 55px;
$skype-y: 0px;
$skype-offset-x: -55px;
$skype-offset-y: 0px;
$skype-width: 50px;
$skype-height: 50px;
$skype-total-width: 160px;
$skype-total-height: 105px;
$skype-image: '../img/sprite.png';
$skype: (55px, 0px, -55px, 0px, 50px, 50px, 160px, 105px, '../img/sprite.png', 'skype', );
$twitter-name: 'twitter';
$twitter-x: 0px;
$twitter-y: 55px;
$twitter-offset-x: 0px;
$twitter-offset-y: -55px;
$twitter-width: 50px;
$twitter-height: 50px;
$twitter-total-width: 160px;
$twitter-total-height: 105px;
$twitter-image: '../img/sprite.png';
$twitter: (0px, 55px, 0px, -55px, 50px, 50px, 160px, 105px, '../img/sprite.png', 'twitter', );
$viber-name: 'viber';
$viber-x: 55px;
$viber-y: 55px;
$viber-offset-x: -55px;
$viber-offset-y: -55px;
$viber-width: 50px;
$viber-height: 50px;
$viber-total-width: 160px;
$viber-total-height: 105px;
$viber-image: '../img/sprite.png';
$viber: (55px, 55px, -55px, -55px, 50px, 50px, 160px, 105px, '../img/sprite.png', 'viber', );
$whatsapp-name: 'whatsapp';
$whatsapp-x: 110px;
$whatsapp-y: 0px;
$whatsapp-offset-x: -110px;
$whatsapp-offset-y: 0px;
$whatsapp-width: 50px;
$whatsapp-height: 50px;
$whatsapp-total-width: 160px;
$whatsapp-total-height: 105px;
$whatsapp-image: '../img/sprite.png';
$whatsapp: (110px, 0px, -110px, 0px, 50px, 50px, 160px, 105px, '../img/sprite.png', 'whatsapp', );
$spritesheet-width: 160px;
$spritesheet-height: 105px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($add-user, $messenger, $skype, $twitter, $viber, $whatsapp, );
$spritesheet: (160px, 105px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
